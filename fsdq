local Leaf = {}

function Leaf:CreateWindow(options)
    local defaultColor = Color3.fromRGB(182, 255, 128)
    local activeColor = options.Color and Color3.fromRGB(options.Color[1], options.Color[2], options.Color[3]) or defaultColor

    local LuckyLeaf30 = Instance.new("ScreenGui")
    local MainFrame = Instance.new("Frame")
    local UICorner = Instance.new("UICorner")
    local Frame = Instance.new("Frame")
    local ScrollingFrame = Instance.new("ScrollingFrame")
    local UIListLayout = Instance.new("UIListLayout")
    local TopBar = Instance.new("Frame")
    local UICorner_19 = Instance.new("UICorner")
    local Frame_2 = Instance.new("Frame")
    local Search = Instance.new("ImageButton")
    local Manage = Instance.new("ImageButton")
    local Settings_3 = Instance.new("ImageButton")
    local LeftLine = Instance.new("Frame")
    local TabFrame = Instance.new("Frame")
    local UICorner_23 = Instance.new("UICorner")
    local MenuName = Instance.new("TextLabel")
    local MenuImage = Instance.new("ImageLabel")

    LuckyLeaf30.Name = "Lucky Leaf 3.0"
    LuckyLeaf30.Parent = game:GetService("CoreGui")
    LuckyLeaf30.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    MainFrame.Name = "MainFrame"
    MainFrame.Parent = LuckyLeaf30
    MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    MainFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    MainFrame.BorderSizePixel = 0
    MainFrame.Position = UDim2.new(0.5, -324, 0.5, -209)
    MainFrame.Size = UDim2.new(0, 649, 0, 419)
    MainFrame.Visible = true

    UICorner.CornerRadius = UDim.new(0, 4)
    UICorner.Parent = MainFrame

    Frame.Parent = MainFrame
    Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Frame.BorderSizePixel = 0
    Frame.Position = UDim2.new(0.845916808, 0, 0, 0)
    Frame.Size = UDim2.new(0, 100, 0, 6)

    ScrollingFrame.Parent = MainFrame
    ScrollingFrame.Active = true
    ScrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ScrollingFrame.BackgroundTransparency = 1.000
    ScrollingFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ScrollingFrame.BorderSizePixel = 0
    ScrollingFrame.Position = UDim2.new(0.00657016644, 0, 0, 0)
    ScrollingFrame.Size = UDim2.new(0, 644, 0, 379)
    ScrollingFrame.ScrollBarThickness = 5

    UIListLayout.Parent = ScrollingFrame
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Padding = UDim.new(0, 10)

    TopBar.Name = "TopBar"
    TopBar.Parent = MainFrame
    TopBar.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
    TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TopBar.BorderSizePixel = 0
    TopBar.Position = UDim2.new(-0.000648721878, 0, -0.115887262, 0)
    TopBar.Size = UDim2.new(0, 649, 0, 49)

    UICorner_19.CornerRadius = UDim.new(0, 4)
    UICorner_19.Parent = TopBar

    Frame_2.Parent = TopBar
    Frame_2.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
    Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Frame_2.BorderSizePixel = 0
    Frame_2.Position = UDim2.new(0.845916808, 0, 0.849999547, 0)
    Frame_2.Size = UDim2.new(0, 100, 0, 7)

    Search.Name = "Search"
    Search.Parent = TopBar
    Search.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Search.BackgroundTransparency = 1.000
    Search.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Search.BorderSizePixel = 0
    Search.Position = UDim2.new(0.862255394, 0, 0.285714298, 0)
    Search.Size = UDim2.new(0, 20, 0, 20)
    Search.Image = "rbxassetid://74838149107043"
    Search.ImageColor3 = Color3.fromRGB(172, 172, 172)

    Manage.Name = "Manage"
    Manage.Parent = TopBar
    Manage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Manage.BackgroundTransparency = 1.000
    Manage.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Manage.BorderSizePixel = 0
    Manage.Position = UDim2.new(0.902317047, 0, 0.285714298, 0)
    Manage.Size = UDim2.new(0, 20, 0, 20)
    Manage.Image = "rbxassetid://94341423317036"
    Manage.ImageColor3 = Color3.fromRGB(172, 172, 172)

    Settings_3.Name = "Settings"
    Settings_3.Parent = TopBar
    Settings_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Settings_3.BackgroundTransparency = 1.000
    Settings_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Settings_3.BorderSizePixel = 0
    Settings_3.Position = UDim2.new(0.94083786, 0, 0.285714298, 0)
    Settings_3.Size = UDim2.new(0, 20, 0, 20)
    Settings_3.Image = "rbxassetid://74379261280917"
    Settings_3.ImageColor3 = Color3.fromRGB(172, 172, 172)

    LeftLine.Name = "LeftLine"
    LeftLine.Parent = MainFrame
    LeftLine.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    LeftLine.BorderColor3 = Color3.fromRGB(0, 0, 0)
    LeftLine.BorderSizePixel = 0
    LeftLine.Position = UDim2.new(0.00400000019, 0, -0.115999997, 0)
    LeftLine.Size = UDim2.new(0, -4, 0, 468)
    LeftLine.ZIndex = 2

    TabFrame.Name = "TabFrame"
    TabFrame.Parent = MainFrame
    TabFrame.BackgroundColor3 = Color3.fromRGB(44, 44, 44)
    TabFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TabFrame.BorderSizePixel = 0
    TabFrame.Position = UDim2.new(-0.245000005, 0, -0.115999997, 0)
    TabFrame.Size = UDim2.new(0, 160, 0, 468)

    UICorner_23.CornerRadius = UDim.new(0, 4)
    UICorner_23.Parent = TabFrame

    MenuName.Name = "MenuName"
    MenuName.Parent = TabFrame
    MenuName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    MenuName.BackgroundTransparency = 1.000
    MenuName.BorderColor3 = Color3.fromRGB(0, 0, 0)
    MenuName.BorderSizePixel = 0
    MenuName.Position = UDim2.new(0.219999999, 0, 0.0189999994, 0)
    MenuName.Size = UDim2.new(0, 130, 0, 50)
    MenuName.Font = Enum.Font.SourceSansBold
    MenuName.Text = options.Name[1] or "Lucky Leaf"
    MenuName.TextColor3 = Color3.fromRGB(255, 255, 255)
    MenuName.TextSize = 20.000

    MenuImage.Name = "MenuImage"
    MenuImage.Parent = TabFrame
    MenuImage.BackgroundColor3 = Color3.fromRGB(172, 172, 172)
    MenuImage.BackgroundTransparency = 1.000
    MenuImage.BorderColor3 = Color3.fromRGB(0, 0, 0)
    MenuImage.BorderSizePixel = 0
    MenuImage.Position = UDim2.new(0.075000003, 0, 0.0300154723, 0)
    MenuImage.Size = UDim2.new(0, 40, 0, 40)
    MenuImage.Image = "rbxassetid://" .. options.LogoID

    local Window = {}
    local tabs = {}
    local subTabs = {}
    local currentTabIndex = 1
    local currentYPosition = 0.14

    function Window:CreateParagraph(paragraphOptions)
        local Parahraftab = Instance.new("TextLabel")
        
        Parahraftab.Name = "Parahraf tab"
        Parahraftab.Parent = TabFrame
        Parahraftab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Parahraftab.BackgroundTransparency = 1.000
        Parahraftab.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Parahraftab.BorderSizePixel = 0
        Parahraftab.Position = UDim2.new(0.05, 0, currentYPosition, 0)
        Parahraftab.Size = UDim2.new(0, 130, 0, 20)
        Parahraftab.Font = Enum.Font.SourceSansBold
        Parahraftab.Text = paragraphOptions.Name or "Paragraph"
        Parahraftab.TextColor3 = Color3.fromRGB(172, 172, 172)
        Parahraftab.TextSize = 14.000
        Parahraftab.TextXAlignment = Enum.TextXAlignment.Left

        currentYPosition = currentYPosition + 0.05

        return {}
    end

    function Window:CreateTab(tabOptions)
        local TabButton = Instance.new("Frame")
        local NameTab = Instance.new("TextLabel")
        local TextButton = Instance.new("TextButton")
        local ImageTab = Instance.new("ImageLabel")

        local isFirst = #tabs == 0
        local shouldOpen = tabOptions.Opened or isFirst

        TabButton.Name = shouldOpen and "TabButton Enabled" or "TabButton Disabled"
        TabButton.Parent = TabFrame
        TabButton.BackgroundColor3 = activeColor
        TabButton.BackgroundTransparency = shouldOpen and 0.550 or 1.000
        TabButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
        TabButton.BorderSizePixel = 0
        TabButton.Position = UDim2.new(0.00625, 0, currentYPosition, 0)
        TabButton.Size = UDim2.new(0, 157, 0, 28)

        currentYPosition = currentYPosition + 0.07

        NameTab.Name = "NameTab"
        NameTab.Parent = TabButton
        NameTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        NameTab.BackgroundTransparency = 1.000
        NameTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
        NameTab.BorderSizePixel = 0
        NameTab.Position = UDim2.new(0, 32, 0, 4)
        NameTab.Size = UDim2.new(0, 100, 0, 20)
        NameTab.Font = Enum.Font.GothamMedium
        NameTab.Text = tabOptions.Name or "Tab"
        NameTab.TextColor3 = shouldOpen and activeColor or Color3.fromRGB(172, 172, 172)
        NameTab.TextSize = 14.000
        NameTab.TextXAlignment = Enum.TextXAlignment.Left

        TextButton.Parent = TabButton
        TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TextButton.BackgroundTransparency = 1.000
        TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
        TextButton.BorderSizePixel = 0
        TextButton.Size = UDim2.new(0, 157, 0, 28)
        TextButton.Font = Enum.Font.SourceSans
        TextButton.TextColor3 = Color3.fromRGB(0, 0, 0)
        TextButton.TextSize = 14.000
        TextButton.TextTransparency = 1.000

        ImageTab.Name = "ImageTab"
        ImageTab.Parent = TabButton
        ImageTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        ImageTab.BackgroundTransparency = 1.000
        ImageTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
        ImageTab.BorderSizePixel = 0
        ImageTab.Position = UDim2.new(0, 8, 0, 4)
        ImageTab.Size = UDim2.new(0, 20, 0, 20)
        ImageTab.ZIndex = 2
        ImageTab.Image = tabOptions.Image or ""
        ImageTab.ImageColor3 = shouldOpen and activeColor or Color3.fromRGB(172, 172, 172)

        local Tab = {
            Button = TabButton,
            NameLabel = NameTab,
            ImageLabel = ImageTab,
            SubTabs = {}
        }

        table.insert(tabs, Tab)
        local tabIndex = #tabs

        if shouldOpen then
            currentTabIndex = tabIndex
        end

        local function setActiveTab(index)
            currentTabIndex = index
            for i, tab in ipairs(tabs) do
                if i == index then
                    tab.Button.BackgroundTransparency = 0.55
                    tab.NameLabel.TextColor3 = activeColor
                    tab.ImageLabel.ImageColor3 = activeColor
                    for _, subTab in ipairs(tab.SubTabs) do
                        subTab.Button.Visible = true
                    end
                else
                    tab.Button.BackgroundTransparency = 1
                    tab.NameLabel.TextColor3 = Color3.fromRGB(172, 172, 172)
                    tab.ImageLabel.ImageColor3 = Color3.fromRGB(172, 172, 172)
                    for _, subTab in ipairs(tab.SubTabs) do
                        subTab.Button.Visible = false
                    end
                end
            end
        end

        TextButton.MouseButton1Click:Connect(function()
            setActiveTab(tabIndex)
        end)

        function Tab:CreateSubTab(subTabOptions)
            local SubTabButton = Instance.new("TextButton")
            local NameSubTab = Instance.new("TextLabel")
            local Frame = Instance.new("Frame")
            local UICorner = Instance.new("UICorner")

            local isFirstInTab = #Tab.SubTabs == 0
            local shouldOpenSub = subTabOptions.Opened or isFirstInTab

            SubTabButton.Name = shouldOpenSub and "SubTab Enabled" or "SubTab Disabled"
            SubTabButton.Parent = TopBar
            SubTabButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            SubTabButton.BackgroundTransparency = 1.000
            SubTabButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
            SubTabButton.BorderSizePixel = 0
            SubTabButton.Position = UDim2.new(0.0238303263 + (#Tab.SubTabs * 0.12), 0, 0, 0)
            SubTabButton.Size = UDim2.new(0, 93, 0, 50)
            SubTabButton.Font = Enum.Font.SourceSans
            SubTabButton.TextColor3 = Color3.fromRGB(0, 0, 0)
            SubTabButton.TextSize = 14.000
            SubTabButton.TextTransparency = 1.000
            SubTabButton.Visible = (tabIndex == currentTabIndex)

            NameSubTab.Name = "NameSubTab"
            NameSubTab.Parent = SubTabButton
            NameSubTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            NameSubTab.BackgroundTransparency = 1.000
            NameSubTab.BorderColor3 = Color3.fromRGB(0, 0, 0)
            NameSubTab.BorderSizePixel = 0
            NameSubTab.Position = UDim2.new(0.189884633, 0, 0.181632698, 0)
            NameSubTab.Size = UDim2.new(0, 50, 0, 29)
            NameSubTab.Font = Enum.Font.SourceSansBold
            NameSubTab.Text = subTabOptions.Name or "SubTab"
            NameSubTab.TextColor3 = shouldOpenSub and activeColor or Color3.fromRGB(172, 172, 172)
            NameSubTab.TextSize = 15.000

            Frame.Parent = SubTabButton
            Frame.BackgroundColor3 = activeColor
            Frame.BackgroundTransparency = shouldOpenSub and 0 or 1.000
            Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Frame.BorderSizePixel = 0
            Frame.Position = UDim2.new(-0.0107097011, 0, 0.932999551, 0)
            Frame.Size = UDim2.new(0, 88, 0, 2)

            UICorner.CornerRadius = UDim.new(0, 4)
            UICorner.Parent = Frame

            local SubTab = {
                Button = SubTabButton,
                NameLabel = NameSubTab,
                Frame = Frame,
                Elements = {}
            }

            table.insert(Tab.SubTabs, SubTab)
            table.insert(subTabs, SubTab)
            local subTabIndex = #Tab.SubTabs

            local function setActiveSubTab(pTabIndex, sTabIndex)
                for i, subTab in ipairs(tabs[pTabIndex].SubTabs) do
                    if i == sTabIndex then
                        subTab.Frame.BackgroundTransparency = 0
                        subTab.NameLabel.TextColor3 = activeColor
                    else
                        subTab.Frame.BackgroundTransparency = 1
                        subTab.NameLabel.TextColor3 = Color3.fromRGB(172, 172, 172)
                    end
                end
            end

            SubTabButton.MouseButton1Click:Connect(function()
                setActiveSubTab(tabIndex, subTabIndex)
            end)

            if shouldOpenSub then
                setActiveSubTab(tabIndex, subTabIndex)
            end

            -- Методы для SubTab
            function SubTab:Section(options)
                local ButtonPanel = Instance.new("Frame")
                local UICorner_2 = Instance.new("UICorner")
                local NameButtonPanel = Instance.new("TextLabel")
                local Pline = Instance.new("Frame")

                ButtonPanel.Name = "ButtonPanel"
                ButtonPanel.Parent = ScrollingFrame
                ButtonPanel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
                ButtonPanel.BorderColor3 = Color3.fromRGB(0, 0, 0)
                ButtonPanel.BorderSizePixel = 0
                ButtonPanel.Size = UDim2.new(0, 300, 0, 200)
                ButtonPanel.ZIndex = 2
                ButtonPanel.LayoutOrder = #self.Elements + 1

                if options.Left then
                    ButtonPanel.Position = UDim2.new(0, 10, 0, (#self.Elements * 210) + 10)
                else
                    ButtonPanel.Position = UDim2.new(0.5, -150, 0, (#self.Elements * 210) + 10)
                end

                UICorner_2.CornerRadius = UDim.new(0, 4)
                UICorner_2.Parent = ButtonPanel

                NameButtonPanel.Name = "NameButtonPanel"
                NameButtonPanel.Parent = ButtonPanel
                NameButtonPanel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                NameButtonPanel.BackgroundTransparency = 1.000
                NameButtonPanel.BorderColor3 = Color3.fromRGB(0, 0, 0)
                NameButtonPanel.BorderSizePixel = 0
                NameButtonPanel.Position = UDim2.new(-0.223333329, 0, -0.0399999991, 0)
                NameButtonPanel.Size = UDim2.new(0, 200, 0, 50)
                NameButtonPanel.Font = Enum.Font.ArialBold
                NameButtonPanel.Text = options.Title or "Section"
                NameButtonPanel.TextColor3 = Color3.fromRGB(50, 50, 50)
                NameButtonPanel.TextSize = 15.000

                Pline.Name = "Pline"
                Pline.Parent = ButtonPanel
                Pline.BackgroundColor3 = activeColor
                Pline.BorderColor3 = Color3.fromRGB(0, 0, 0)
                Pline.BorderSizePixel = 0
                Pline.Position = UDim2.new(0.0199999996, 0, 0.165000007, 0)
                Pline.Size = UDim2.new(0, 288, 0, 2)

                table.insert(self.Elements, ButtonPanel)
                return ButtonPanel
            end

            function SubTab:CheckBox(options, id)
                local parent = self.Elements[#self.Elements] or ScrollingFrame
                local CheckBoxEnabled = Instance.new("TextButton")
                local UICorner_3 = Instance.new("UICorner")
                local CheckBoxName = Instance.new("TextLabel")
                local ImageLabel = Instance.new("ImageLabel")

                CheckBoxEnabled.Name = "CheckBoxEnabled"
                CheckBoxEnabled.Parent = parent
                CheckBoxEnabled.BackgroundColor3 = options.Default and activeColor or Color3.fromRGB(50, 50, 50)
                CheckBoxEnabled.BorderColor3 = Color3.fromRGB(0, 0, 0)
                CheckBoxEnabled.BorderSizePixel = 0
                CheckBoxEnabled.Position = UDim2.new(0.0366666652, 0, 0.344999999, 0)
                CheckBoxEnabled.Size = UDim2.new(0, 18, 0, 18)
                CheckBoxEnabled.Font = Enum.Font.SourceSans
                CheckBoxEnabled.TextColor3 = Color3.fromRGB(0, 0, 0)
                CheckBoxEnabled.TextSize = 14.000
                CheckBoxEnabled.TextTransparency = 1.000

                UICorner_3.CornerRadius = UDim.new(0, 4)
                UICorner_3.Parent = CheckBoxEnabled

                CheckBoxName.Name = "CheckBoxName"
                CheckBoxName.Parent = CheckBoxEnabled
                CheckBoxName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                CheckBoxName.BackgroundTransparency = 1.000
                CheckBoxName.BorderColor3 = Color3.fromRGB(0, 0, 0)
                CheckBoxName.BorderSizePixel = 0
                CheckBoxName.Position = UDim2.new(1.10000002, 0, -0.365999997, 0)
                CheckBoxName.Size = UDim2.new(0, 200, 0, 29)
                CheckBoxName.Font = Enum.Font.GothamBold
                CheckBoxName.Text = options.Title or "CheckBox"
                CheckBoxName.TextColor3 = Color3.fromRGB(218, 237, 255)
                CheckBoxName.TextSize = 12.000

                ImageLabel.Parent = CheckBoxEnabled
                ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                ImageLabel.BackgroundTransparency = 1.000
                ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
                ImageLabel.BorderSizePixel = 0
                ImageLabel.Position = UDim2.new(0.100000001, 0, 0.109999999, 0)
                ImageLabel.Size = UDim2.new(0, 15, 0, 15)
                ImageLabel.Image = "rbxassetid://117429211744366"
                ImageLabel.ImageColor3 = Color3.fromRGB(0, 0, 0)
                ImageLabel.Visible = options.Default

                local state = options.Default or false

                CheckBoxEnabled.MouseButton1Click:Connect(function()
                    state = not state
                    CheckBoxEnabled.BackgroundColor3 = state and activeColor or Color3.fromRGB(50, 50, 50)
                    ImageLabel.Visible = state
                    if options.Callback then
                        options.Callback(state)
                    end
                end)

                return CheckBoxEnabled
            end

            function SubTab:Slider(options)
                local parent = self.Elements[#self.Elements] or ScrollingFrame
                local Slider = Instance.new("Frame")
                local SliderName = Instance.new("TextLabel")
                local UICorner_6 = Instance.new("UICorner")
                local Progress = Instance.new("Frame")
                local UICorner_7 = Instance.new("UICorner")
                local Circle = Instance.new("Frame")
                local UICorner_8 = Instance.new("UICorner")
                local UIStroke = Instance.new("UIStroke")
                local Number = Instance.new("TextLabel")

                Slider.Name = "Slider"
                Slider.Parent = parent
                Slider.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
                Slider.BorderColor3 = Color3.fromRGB(0, 0, 0)
                Slider.BorderSizePixel = 0
                Slider.Position = UDim2.new(0.0363334157, 0, 0.599000037, 0)
                Slider.Size = UDim2.new(0, 275, 0, 5)

                SliderName.Name = "SliderName"
                SliderName.Parent = Slider
                SliderName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                SliderName.BackgroundTransparency = 1.000
                SliderName.BorderColor3 = Color3.fromRGB(0, 0, 0)
                SliderName.BorderSizePixel = 0
                SliderName.Position = UDim2.new(-0.00999999978, 0, -7, 0)
                SliderName.Size = UDim2.new(0, 200, 0, 29)
                SliderName.Font = Enum.Font.GothamBold
                SliderName.Text = options.Title or "Slider"
                SliderName.TextColor3 = Color3.fromRGB(218, 237, 255)
                SliderName.TextSize = 12.000

                UICorner_6.CornerRadius = UDim.new(0, 4)
                UICorner_6.Parent = Slider

                Progress.Name = "Progress"
                Progress.Parent = Slider
                Progress.BackgroundColor3 = activeColor
                Progress.BorderColor3 = Color3.fromRGB(0, 0, 0)
                Progress.BorderSizePixel = 0
                Progress.Position = UDim2.new(-0.00427257176, 0, -0.0510009751, 0)
                Progress.Size = UDim2.new(0, 0, 0, 5)

                UICorner_7.CornerRadius = UDim.new(0, 4)
                UICorner_7.Parent = Progress

                Circle.Name = "Circle"
                Circle.Parent = Progress
                Circle.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
                Circle.BorderColor3 = Color3.fromRGB(0, 0, 0)
                Circle.BorderSizePixel = 0
                Circle.Position = UDim2.new(1, -5, -0.600000024, 0)
                Circle.Size = UDim2.new(0, 10, 0, 10)

                UICorner_8.CornerRadius = UDim.new(1, 0)
                UICorner_8.Parent = Circle

                UIStroke.Name = "UIStroke"
                UIStroke.Parent = Circle
                UIStroke.Color = activeColor
                UIStroke.Thickness = 2

                Number.Name = "Number"
                Number.Parent = Slider
                Number.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Number.BackgroundTransparency = 1.000
                Number.BorderColor3 = Color3.fromRGB(0, 0, 0)
                Number.BorderSizePixel = 0
                Number.Position = UDim2.new(0.889999986, 0, -7, 0)
                Number.Size = UDim2.new(0, 50, 0, 29)
                Number.Font = Enum.Font.GothamBold
                Number.Text = tostring(options.Value.Default or 0)
                Number.TextColor3 = Color3.fromRGB(218, 237, 255)
                Number.TextSize = 12.000

                local min = options.Value.Min or 0
                local max = options.Value.Max or 100
                local increment = options.Value.Increment or 1
                local defaultValue = options.Value.Default or min
                local currentValue = defaultValue

                local function updateSlider(value)
                    currentValue = math.clamp(value, min, max)
                    local percentage = (currentValue - min) / (max - min)
                    Progress.Size = UDim2.new(percentage, 0, 0, 5)
                    Circle.Position = UDim2.new(percentage, -5, -0.600000024, 0)
                    Number.Text = tostring(currentValue)
                    
                    if options.Callback then
                        options.Callback(currentValue)
                    end
                end

                updateSlider(defaultValue)

                local dragging = false

                Circle.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = true
                    end
                end)

                Circle.InputEnded:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = false
                    end
                end)

                game:GetService("UserInputService").InputChanged:Connect(function(input)
                    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                        local pos = UDim2.fromScale(math.clamp((input.Position.X - Slider.AbsolutePosition.X) / Slider.AbsoluteSize.X, 0, 1), 0)
                        local value = min + (pos.X.Scale * (max - min))
                        value = math.floor(value / increment) * increment
                        updateSlider(value)
                    end
                end)

                return Slider
            end

            return SubTab
        end

        if shouldOpen then
            setActiveTab(tabIndex)
        end

        return Tab
    end

    local UIS = game:GetService('UserInputService')
    local dragging
    local dragInput
    local dragStart
    local startPos

    local function update(input)
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    TopBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    TopBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    UIS.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)

    UIS.InputBegan:Connect(function(input)
        if input.KeyCode == Enum.KeyCode.RightShift then
            MainFrame.Visible = not MainFrame.Visible
        end
    end)

    return Window
end

return Leaf
